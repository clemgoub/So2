#! /bin/bash
#######################################################################################
### TE-trimmer.sh - V0.1 - Clement Goubert (2020) - goubert.clement@gmail.com       ###
### ------------------------------------------------------------------------------- ###
### This script uses the R function consensus2genome/Run-c2g to                     ###
### to split and/or trim TE                                                         ###
### consensi generated by tools like RepeatModeler2, EDTA, REPET,...                ###
### USAGE:  TE-slicer.sh $1<H/L> $2<TE-header/TE-header-list (list of queries>      ###
###         $3 <RepeatMasker.out> $4 <TElib.fa (consensi)> $5<outputdir>            ###
### query: path to query (fasta file)                                               ###
### db: path to blast db (blast formated nucleotide database)                       ###
#######################################################################################

#dependencies
# R
# bedtools
# consensus2genome.R
# Run-c2g.R
# extractfasta.sh

mkdir -p $5

if [[ $1 == "H" ]]

then
 

echo "\"H\" mode" # single sequence mode
./extractfasta.sh H $2 $4 > $5/TE.fasta
samtools faidx $5/TE.fasta
echo "mapping and computing coverage..."
Rscript ./Run-c2g.R $5/TE.fasta $3 | grep "^\[[1-9].*\]" | cut -f 2- | awk 'NR > 1 {print $2"\t"$3}' > $5/TE
#ho=$(cat $5/TE | sed 's/"//g')
#testing="NOTRIM"
wait


if [[ $(cat $5/TE | sed 's/"//g') == "" ]]

      then
      
      echo "no trimming necessary"
      
      else
      
echo "trimming..."
tename=$(head -n 1 $5/TE.fasta | sed 's/>//g' | awk '{print $1}')
awk -v tename=$tename '{print tename"\t"$0}' $5/TE > $5/TE.bed
awk 'BEGIN {OFS = "\n"}; /^>/ {print(substr(sequence_id, 2)" "sequence_length); sequence_length = 0; sequence_id = $0}; /^[^>]/ {sequence_length += length($0)}; END {print(substr(sequence_id, 2)" "sequence_length)}' $5/TE.fasta | awk 'NR > 1 {print $1"\t"$NF}' > $5/TE.genome 
bedtools complement -i $5/TE.bed -g $5/TE.genome > $5/TE.1.bed
tename2=$(head -n 1 $5/TE.fasta | sed 's/>//g;s/#/\t/g' | awk '{print $1}')
bedtools getfasta -fi $5/TE.fasta -bed $5/TE.1.bed > $5/$tename2''.splitted.fasta
mv *.pdf $5/$tename2''.pdf

fi

  
elif [[ $1 == "L" ]]
  then
  
  echo "\"L\" mode" # multiple sequences mode

  consensi=$(cat $2)
  for seq in $consensi
  do
  echo "$seq"

./extractfasta.sh H "$seq" $4 > $5/TE.fasta
samtools faidx $5/TE.fasta
echo "mapping and computing coverage..."
# ./Run-c2g.R TE RM Lib
Rscript ./Run-c2g.R $seq $3 $4 | grep "^\[1\]" | awk '{print $2"\t"$3}' > $5/TE
#ho=$(cat $5/TE | sed 's/"//g')
#testing="NOTRIM"
wait


if [[ $(cat $5/TE | sed 's/"//g') == "" ]]

      then
      
      echo "no trimming necessary"
      
      else
      
      echo "trimming..."
      #tename=$(head -n 1 $5/TE.fasta | sed 's/>//g' | awk '{print $1}')
      awk -v tename=$seq '{print tename"\t"$0}' $5/TE > $5/TE.bed
      paste <(echo "$seq") <(awk 'BEGIN {OFS = "\n"}; /^>/ {print(substr(sequence_id, 2)" "sequence_length); sequence_length = 0; sequence_id = $0}; /^[^>]/ {sequence_length += length($0)}; END {print(substr(sequence_id, 2)" "sequence_length)}' $5/TE.fasta | awk 'NR > 1 {print $NF}')  > $5/TE.genome 
      bedtools complement -i $5/TE.bed -g $5/TE.genome > $5/TE.1.bed
      tename2=$(head -n 1 $5/TE.fasta | sed 's/>//g;s/#/\t/g' | awk '{print $1}')
      bedtools getfasta -fi $5/TE.fasta -bed $5/TE.1.bed > $5/$tename2''.splitted.fasta
      python filterlength.py $5/$tename2''.splitted.fasta 200 20000 $5/$tename2''.splitted.clean.fasta
      #mv *.pdf $5/$tename2''.pdf

fi

      
  done
    
else
    
    echo "wrong mode selected, chose between \"H\" (single header) and \"L\" (list of headers)"

fi
